---
- name: Add signing keys
  become: true
  apt_key:
      url: "{{item}}"
      state: present
  with_items:
      - "https://dl.google.com/linux/linux_signing_key.pub"
      - "https://www.virtualbox.org/download/oracle_vbox_2016.asc"
      - "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
      - "https://keybase.io/hashicorp/pgp_keys.asc"
      - "https://dl.winehq.org/wine-builds/Release.key"
      - "https://packages.microsoft.com/keys/microsoft.asc"

- name: Add apt repositories
  become: true
  apt_repository:
      repo: "{{item}}"
      state: present
  with_items:
      - "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main"
      - "deb [arch=amd64] http://download.virtualbox.org/virtualbox/debian {{ansible_distribution_release}} contrib"
      - "deb [arch=amd64] https://deb.nodesource.com/node_6.x {{ansible_distribution_release}} main"
      - "deb https://dl.winehq.org/wine-builds/ubuntu/ {{ansible_distribution_release}} main"
      - "deb [arch=amd64] https://packages.microsoft.com/ubuntu/{{ansible_distribution_version}}/prod {{ansible_distribution_release}} main"

- name: Check if i386 is enabled
  shell: dpkg --print-foreign-architectures | grep i386
  register: result_i386_check
  changed_when: result_i386_check.rc == 1
  failed_when: result_i386_check.rc > 1

- name: Enable i386 architecture
  command: dpkg --add-architecture i386
  when: result_i386_check.rc == 1

- name: Install packages
  become: true
  apt:
      name: "{{item}}"
      state: present
      update_cache: true
  with_items:
      - whois
      - dkms
      - virtualbox-5.2
      - google-chrome-stable
      - jfsutils
      - openssh-server
      - cryptsetup-bin
      - wipe
      - graphviz
      - ddd
      - doxygen
      - winehq-stable
      - gcc-mingw-w64-i686
      - libc6-dev-i386
      - nodejs
      - curl
      - wireshark
      - kazam
      - handbrake
      - gimp
      - inkscape
      - gparted
      - meld
      - jq
      - rubygems
      - ruby-dev
      - wkhtmltopdf
      - powershell
      - php7.0-cli
      - sqlite3
      - qemu-system-arm
      - qemu-system-mips
      - qemu-user-binfmt
      - gcc-arm-linux-gnueabi
      - pv
      - scrot
      - nmap
      - ht
      - gcc-multilib
      - libncurses5-dev
      - socat
      - ant

- name: Have qemu-binfmt directory
  become: true
  file:
      path: "/etc/qemu-binfmt"
      state: directory

- name: Have library path for qemu arm
  become: true
  file:
      src: /usr/arm-linux-gnueabi
      dest: /etc/qemu-binfmt/arm
      state: link

- name: Find Ruby Gem path
  become: true
  command: ruby -e 'puts Gem.user_dir'
  register: rubygem

- name: Install gimli
  become: true
  environment:
      PATH: "{{ansible_env.PATH}}:{{rubygem.stdout}}/bin"
  gem:
      name: gimli
      user_install: no

- name: Install vagrant
  become: true
  apt:
      deb: "https://releases.hashicorp.com/vagrant/2.0.1/vagrant_2.0.1_x86_64.deb"

- name: Set ssh dir permissions
  file:
      path: "{{ansible_user_dir}}/.ssh"
      state: directory
      mode: 0700

- name: ssh client config
  blockinfile:
      dest: "{{ansible_user_dir}}/.ssh/config"
      create: True
      block: |
        Host gogs.the-playground.dk
            Port 10022
            User git

- name: Know gogs.the-playground.dk
  lineinfile:
      dest: "{{ansible_user_dir}}/.ssh/known_hosts"
      create: True
      line: "{{item}}"
  with_items:
      - "|1|j5gochmZUabs7pVVoFX/Z61YsRg=|fgXFP+mcghMBT62xQ1a5WwKOw/U= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJw9lbWEFuKOmehtLzcP+gN2V+2fr/jwkSE6Mn+azUdK7reKm8hdvfOEiwC27zOhXysj/+TGQcOrjD7F1Lvu2JQ="
      - "|1|+5ngtb2l4HJLKgUGLuoIayHj11M=|b/9ZFQHewFtoPG5UVDQRyw3L9Jg= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJw9lbWEFuKOmehtLzcP+gN2V+2fr/jwkSE6Mn+azUdK7reKm8hdvfOEiwC27zOhXysj/+TGQcOrjD7F1Lvu2JQ="

- name: Set ssh file permissions
  file:
      path: "{{ansible_user_dir}}/.ssh/{{item}}"
      state: file
      mode: 0600
  with_items:
      - config
      - known_hosts
      - id_rsa

- name: Set git email
  git_config:
      scope: global
      name: user.email
      value: robert@the-playground.dk

- name: Set git user name
  git_config:
      scope: global
      name: user.name
      value: Robert Larsen

- name: Have my dotfiles
  git: 
      repo: https://github.com/RobertLarsen/dotfiles.git
      dest: "{{local_repositories_dir}}/dotfiles"

- name: Load local bash settings
  lineinfile:
      dest: "{{ansible_user_dir}}/.bashrc"
      line: ". {{local_repositories_dir}}/dotfiles/bashrc"

- name: Check screen lock shortcut
  command: gsettings get org.gnome.settings-daemon.plugins.media-keys screensaver
  register: screenlock

- name: Lock screen with <Shift><Alt>l
  command: gsettings set org.gnome.settings-daemon.plugins.media-keys screensaver '<Shift><Alt>l'
  when: not screenlock.stdout == "'<Shift><Alt>l'"

- name: Have two column workspaces
  command: gsettings set org.compiz.core:/org/compiz/profiles/unity/plugins/core/ hsize 2

- name: Have two row workspaces
  command: gsettings set org.compiz.core:/org/compiz/profiles/unity/plugins/core/ vsize 2

- name: Don't lock screen when inactive
  command: gsettings set org.gnome.desktop.session idle-delay 0

- name: Install python packages
  become: true
  pip: "name={{item}}"
  with_items:
      - cstruct
      - requests
      - Flask
      - redis
      - pymongo

- name: Install gdb and plugins
  import_tasks: gdb.yml

- name: Have useful docker images
  become: true
  docker_image:
      name: "{{item}}"
  with_items:
      - ubuntu:16.04
      - redis
      - mysql
      - mongo
      - python
      - nginx

- name: Have workstation scripts
  git: 
      repo: git@gogs.the-playground.dk:robert/Workstation.git
      dest: "{{local_repositories_dir}}/Workstation"

- name: Have workstation scripts in path
  lineinfile:
      dest: "{{ansible_user_dir}}/.bashrc"
      line: "export PATH=$PATH:{{local_repositories_dir}}/Workstation"

- name: Symlink password file
  file:
      src: "{{local_repositories_dir}}/Workstation/passwords.txt.gpg"
      dest: "{{ansible_user_dir}}/.passwords.txt.gpg"
      state: link
